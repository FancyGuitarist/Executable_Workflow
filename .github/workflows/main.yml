name: Python MacOS Universal2

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags, e.g., v1.0.0

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.3'
        architecture: 'x64'

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip
        python -m pip install delocate py2app
        pip install -r requirements.txt
    - name: Combine Wheels
      run: |
        source venv/bin/activate
        python universal2_wheels.py
    - name: Reinstall in universal2
      run: |
        source venv/bin/activate
        pip install combined_wheels/opencv_python-4.10.0.84-cp37-abi3-macosx_12_0_universal2.whl --force-reinstall
        pip install combined_wheels/pillow-10.3.0-cp312-cp312-macosx_11_0_universal2.whl --force-reinstall
        pip install combined_wheels/numpy-2.0.0-cp312-cp312-macosx_11_0_universal2.whl --force-reinstall

    - name: Copy tk files into lib of venv
      run: |
        source venv/bin/activate
        cp -r tk_files/* venv/lib/
        
    - name: Build App
      run: |
        source venv/bin/activate
        python setup.py py2app -v
        
    - name: Ensure execution permissions
      run: chmod +x dist/*.app/Contents/MacOS/*
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: built-app
        path: dist/*.app

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/*.app
        asset_name: myapp.app
        asset_content_type: application/octet-stream
